name: Continuous Integration

on:
  push:
    branches:
      - main
      - 4-feature-gh-actions-docker-pipelines
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
  workflow_dispatch:

jobs:
  test:
    name: Test Implementation
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - IMAGE: rolling-ci
            ROS_DISTRO: rolling
            CLANG_TIDY: true
          - IMAGE: humble-ci
            ROS_DISTRO: humble
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Log into registry
        uses: docker/login-action@v2.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run ROS Industrial CI
        uses: ros-industrial/industrial_ci@master
        env:
          DOCKER_IMAGE: ghcr.io/evan-palmer/alpha:${{ matrix.env.IMAGE }}
          # CXXFLAGS: >-
          #   -Wall -Wextra -Wpedantic
          # CLANG_TIDY: true
          # CLANG_TIDY_ARGS: --format-style=file
          CXXFLAGS: >-
            -Wall -Wextra -Wwrite-strings -Wunreachable-code -Wpointer-arith -Wredundant-decls
          CLANG_TIDY_ARGS: --fix --fix-errors --format-style=file
          UPSTREAM_CMAKE_ARGS: "-DCMAKE_CXX_FLAGS=''"
          DOWNSTREAM_CMAKE_ARGS: -DCMAKE_CXX_FLAGS="-Wall -Wextra"
          BASEDIR: ${{ github.workspace }}/.work
          CLANG_TIDY_BASE_REF: ${{ github.event_name != 'workflow_dispatch' && (github.base_ref || github.ref) || '' }}
          BEFORE_CLANG_TIDY_CHECKS: |
            # Show list of applied checks
            (cd $TARGET_REPO_PATH; clang-tidy --list-checks)
          CC: ${{ matrix.env.CLANG_TIDY && 'clang' }}
          CXX: ${{ matrix.env.CLANG_TIDY && 'clang++' }}

      - name: Upload clang-tidy changes
        uses: rhaschke/upload-git-patch-action@main
        if: always() && matrix.env.CLANG_TIDY
        with:
          name: clang-tidy
          path: ${{ env.BASEDIR }}/target_ws/src/$(basename $(pwd))
